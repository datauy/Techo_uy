window.VERSION = "0.0.1";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://backend.educacion.thor.datauy.org"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!1),cordova.plugins.Keyboard.disableScroll(!1)),ionic.Platform.isFullScreen=!0,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.index",{cache:!1,url:"/index",views:{menuContent:{templateUrl:"templates/static/app.component.html",controller:"IndexController"}}}).state("app.contact",{cache:!1,url:"/contact",views:{menuContent:{templateUrl:"templates/static/contact.component.html",controller:"ContactController"}}}).state("app.contenidos",{cache:!1,url:"/contenidos",views:{menuContent:{templateUrl:"templates/static/press-room.component.html",controller:"StaticController"}}}).state("app.metodologia",{cache:!1,url:"/metodologia",views:{menuContent:{templateUrl:"templates/static/methodology.component.html",controller:"StaticController"}}}).state("app.contacto",{cache:!1,url:"/contacto",views:{menuContent:{templateUrl:"templates/static/contact.component.html",controller:"StaticController"}}}).state("app.map",{cache:!1,url:"/map",views:{menuContent:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.form",{cache:!1,url:"/form",views:{menuContent:{templateUrl:"templates/form.html",controller:"FormCtrl"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}),t.otherwise("/app/map")}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var a=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(a+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(a+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"create_user",n.picture_url,r,i)}if(n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(a+"create_user",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(a+"create_user",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(a+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,r){var i="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+r;return e.post(a+"change_password",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"edit_profile",n.picture_url,r,i)}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(a+"edit_profile",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(a+"edit_profile",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("CkanService",["$http","leafletData","ConfigService",function(e,t,n){return{lastPinsResponse:null,asentamientosActivos:null,getAllPolygons:function(){return e.get(n.ckanAllPolygonsURL,{headers:{Authorization:"d7e78b6e-3eed-4d69-8387-ab0196121a51"}}).then(function(e){return e.data.result.records})},getPolygonsById:function(t){var n=[];return e.get("polygons.json").then(function(e){for(var o=0;o<e.data.length;o++){t.indexOf(parseInt(e.data[o].COD_AST))!=-1&&n.push(e.data[o])}return n})},getData:function(t){var n="SELECT * from ";if(t.a_o&&t.a_o.uno?(n+='"14348e65-292d-4b0d-b48b-0cce62418466" ',t.hasOwnProperty("tipo")&&delete t.tipo,t.hasOwnProperty("vivendas_no")&&delete t.vivendas_no,t.hasOwnProperty("p_techos_prec")&&delete t.p_techos_prec,t.hasOwnProperty("p_paredes_prec")&&delete t.p_paredes_prec,t.hasOwnProperty("p_contelect")&&delete t.p_contelect,t.hasOwnProperty("p_c_drenaje")&&delete t.p_c_drenaje):n+='"090341a0-dfba-43fd-bc82-da90394a883d" ',"0"==t.depto&&delete t.depto,t.hasOwnProperty("a_o")&&delete t.a_o,console.log(t),Object.keys(t).length){n+="where ",queryArr=[];for(var o in t)if(t.hasOwnProperty(o))switch(o){case"tipo":if(t.tipo.urbano&&t.tipo.rural)continue;t.tipo.urbano?queryArr.push("tipo_asentamiento = 1"):t.tipo.rural&&queryArr.push("tipo_asentamiento = 2");break;case"depto":queryArr.push("depto = "+t.depto);break;case"vivendas_no":var a=[];t[o].uno&&a.push("nro_viviendas <= 50"),t[o].dos&&a.push("nro_viviendas > 50 AND nro_viviendas <= 100"),t[o].tres&&a.push("nro_viviendas > 100 AND nro_viviendas <= 200"),t[o].cuatro&&a.push("nro_viviendas > 200"),queryArr.push(a.join(" OR "));break;case"p_techos_prec":case"p_paredes_prec":case"vivendas_suelos":case"p_contelect":case"p_c_drenaje":case"p_acera_materiales":case"p_calle_materiales":var r=[];t[o].cuarenta&&r.push(o+" <= 40"),t[o].sesenta&&r.push(o+" > 40 AND 60 <= "+o),t[o].cien&&r.push(o+" > 60"),queryArr.push(r.join(" OR "));break;case"alumbrado_asent":case"basural_asent":case"parada_asent":case"placas_asent":queryArr.push(o+" = 1");break;case"arbolado":if(t.arbolado.cincuenta&&t.arbolado.cien)continue;t.arbolado.cincuenta?queryArr.push("arbolado_asent = 0"):t.arbolado.cien&&queryArr.push("arbolado_asent >= 1")}n+=queryArr.join(" AND ")}return console.log("Query -> "+n),e.post("/ckanSql",{sql:n}).then(function(e){return console.log(e),e.data.result.records})},getDataById:function(t){console.log("DATABYID");var n="/ckanData",o={resource_id:"a3c8a073-ce32-434b-a751-f35c7b750968",limit:1,q:t};return console.log(o),e.post(n,o).then(function(e){return console.log("termina POST"),console.log(e),e})},getAllData:function(t){console.log("ALLDATA");var n="/ckanData";return e.post(n,{resource_id:t,limit:700}).then(function(e){return e.data.result.records})},queryData:function(t){return console.log("DATABYQUERY"),e.post("/ckanSql",{sql:t}).then(function(e){return console.log("BYQUERY"),console.log(e),e.data.result.records})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://backend.techouy.thor.datauy.org",t.ckanAllPolygonsURL="/ckan",t.AppName="TECHO UY",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,a,r,i,s,l){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:a,uid:r,status:i,gender:s,interested:l};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function a(){return m=new PouchDB("tomamosuna_local_db")}function r(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function i(e){return m.put(e)}function s(){return m.get("categories-list")}function l(e){s().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_ï¿¿"})}function p(e){m.get(e).then(function(e){return m.remove(e)})}function d(e){return m.remove(e)}var m;return{initDB:a,saveUser:t,getUser:n,eraseUser:o,saveReport:r,getReport:c,getAllReports:u,updateReport:i,deleteReport:p,deleteGivenReport:d,getCategories:s,saveCategories:l}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacÃ­o.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una direcciÃ³n de correo vÃ¡lida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cÃ©dula uruguaya vÃ¡lida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var a=document.getElementById(t);return a.innerHTML=o,a.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,a,r){var i={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,a]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(i,{pointToLayer:function(e,o){n=o;var a="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquÃ­</a></p>",i=t(a)(r);return L.marker(o).bindPopup(i[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove())},e}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=n.baseURL+"/sites/tomamos_una/files/json/users_geo.json",r=n.baseURL+"/api/";return proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs"),o.convertLatLongProj=function(e,t,n){var o,a={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[e,t]},properties:{}}]};L.Proj.geoJson(a,{pointToLayer:function(e,t){return o=t,t}});return o},o.getAll=function(){return e.get(a,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,a,i){var s="user="+o+"&password="+a+"&lat="+t+"&lon="+n+"&uid="+i;return e.post(r+"send_user_position",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,a,r,i){$scope=n;var s=e.show({template:r+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+r+'" no puede estar vacÃ­o.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+r+'" no es una direcciÃ³n de correo vÃ¡lida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+r+'" no es una cÃ©dula uruguaya vÃ¡lida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+r+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var a=document.getElementById("error_container_inside");a.innerHTML=n,a.style.display="block",e.preventDefault()}}]});return s}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,a,r){var i="ubicacionesRestProd",s={};return s.searchLocationByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},s.searchEsquinaByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},s.getLocationGeom=function(t){for(var o=n.url+"/"+i+s.getParamPathByTipo(t.tipo),a=0;a<t.pathParams.length;a++)o+="/"+t.pathParams[a];return e.get(baseURL).then(function(e){return e.data})},s.getLocationGeomPMB=function(t,n,o){var i=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t+","+n+","+o;return e.get(i)},s.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},s}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,a,r,i,s,l){t.uid=r,t.name=e,t.password=n,t.picture_url=o,t.show_location=a,t.status=i,t.gender=s,t.interested=l},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=n%10===0?0:10-n%10,t==a}return!1}}}]),pmb_im.controllers.controller("AbsController",["$scope",function(e){}]),pmb_im.controllers.controller("FormCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,a,r,i,s,l,c){e.form={},e.form.edad=16,e.form.plan="",e.form.lugar="",e.form.turno="",e.form.nivel_aprobado="",e.next=function(){l.next()},e.previous=function(){l.previous()},e.go_to_map=function(){t.go("app.map")}}]),pmb_im.controllers.controller("IndexController",["$scope",function(e){}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService",function(e,t,n,o,a,r,i,s){var l=s.initDB();l.info().then(console.log.bind(console)),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){i.save_initial_position(e),t.go("app.form")},function(e){t.go("app.form")})},e.$on("$ionicView.enter",function(){null!=i.council_modal&&(i.council_modal.hide(),i.council_modal.remove()),e.geolocate()})}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaCamera","$cordovaGeolocation","$compile","$ionicModal","$ionicPopup","leafletData","ConfigService","LocationsService","CkanService","PinService","AuthService","UserService","DBService","$timeout","$interval","$location","ErrorService","$ionicSlideBoxDelegate","$ionicScrollDelegate","PopUpService","ConnectivityService","$cordovaInAppBrowser","MapService","ModalService","SemaphoreService","ValidationService",function(e,t,n,o,a,r,i,s,l,c,u,p,d,m,_,g,f,v,h,y,b,w,A,k,I,P,O,D){e.asentamientos_layers=new Array,e.baseURL=l.baseURL,e.AppName=l.AppName,e.user_cached_image="./img/icon-user-anonymous.png",e.one_value_popup=null,e.myIntervals=new Array,e.filters={},e.astVulnera={0:{color:"#1cc7bd",name:"Bajo",icon:"img/pin-green.svg"},1:{color:"#1cc7bd",name:"Bajo",icon:"img/pin-green.svg"},2:{color:"#0092dd",name:"Mediano",icon:"img/pin-blue.svg"},3:{color:"#0092dd",name:"Mediano",icon:"img/pin-blue.svg"},4:{color:"#feb429",name:"Alto",icon:"img/pin-yellow.svg"},5:{color:"#feb429",name:"Alto",icon:"img/pin-yellow.svg"},6:{color:"#c85757",name:"Extremo",icon:"img/pin-red.svg"}},e.$on("$ionicView.beforeEnter",function(){P.checkNoModalIsOpen(),_.initDB(),A.isOnline()?e.check_user_logged():e.set_offline_user(),A.isOnline()&&(document.getElementById("spinner").style.display="block",e.create_online_map())}),e.$on("$ionicView.afterEnter",function(){s.getMap();""!=c.initial_lat?I.centerMapOnCoords(c.initial_lat,c.initial_lng,10):I.centerMapOnCoords(-32.462703,-55.701468,7)}),e.openWebsite=function(e){var t={location:"no",clearcache:"yes",toolbar:"no"};k.open(e,"_blank",t).then(function(e){})["catch"](function(e){})},e.create_online_map=function(){e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:1,maxZoom:18,zoomControlPosition:"bottomright"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{}},e.loadPinsLayer(),e.map.center={lat:-34.901113,lng:-56.164531,zoom:10},s.getMap().then(function(t){t.on("moveend",e.hideOffScreenPins)})},e.next=function(){y.next()},e.previous=function(){y.previous()},e.back_to_map=function(e){e?(P.checkNoModalIsOpen(),document.getElementById("spinner-inside-modal").style.display="none"):document.getElementById("spinner-inside-modal").style.display="none"},e.image=null,e.addImage=function(t,o,a,r){e.isUserPhoto=o,e.isCommentPhoto=a,e.isNewUserPhoto=r;var i=Camera.PictureSourceType.CAMERA,s=!0,l=!0;1==t&&(i=Camera.PictureSourceType.PHOTOLIBRARY,s=!1,l=!1);var c={quality:90,destinationType:Camera.DestinationType.FILE_URI,sourceType:i,allowEdit:!1,correctOrientation:s,encodingType:Camera.EncodingType.JPEG,popoverOptions:CameraPopoverOptions,saveToPhotoAlbum:l,targetWidth:500,targetHeight:500};n.getPicture(c).then(function(t){function n(t){window.FilePath.resolveNativePath(t,function(n){t="file://"+n,n.startsWith("file://")&&(t=n),1==e.isUserPhoto?e.profile.picture_url=t:1==e.isCommentPhoto?e.comment.file=t:1==e.isNewUserPhoto&&(e.newuser.picture_url=t),e.imgURI=t},function(e){alert("Error resolveNativePath"+e)})}n(t)},function(e){})},e.urlForImage=function(){var t="http://placehold.it/200x200";if(e.image){var n=e.image.substr(e.image.lastIndexOf("/")+1);t=cordova.file.dataDirectory+n}return t},e.scrollMe=function(e){v.hash(e);var t=b.$getByHandle("content");t.anchorScroll()},e.set_active_option=function(e){document.getElementById(e).className="option-active"},e.hide_special_divs=function(){},e.close_report_detail_modal=function(){P.checkNoModalIsOpen(),e.report_detail_id=null},e.locate=function(){o.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"You Are Here",focus:!0,draggable:!1}},function(e){})},e.addMapControls=function(){document.getElementById("map_crosshair").style.display="block",document.getElementById("map_crosshair_button").style.display="block"},e.changeUserLocationPin=function(t,n,o){if(e.online_user_geo_array[o]){layer=e.online_user_geo_array[o];var a=new L.LatLng(t,n);layer.setLatLng(a)}},e.removeAllPins=function(){s.getMap().then(function(t){e.asentamientos_layers.forEach(function(e,n){t.removeLayer(e)})})},e.hideOffScreenPins=function(){},e.loadPinsLayer=function(){document.getElementById("spinner").style.display="block",u.getAllData("090341a0-dfba-43fd-bc82-da90394a883d").then(function(t){u.asentamientosActivos=t,e.updatePins()})},e.getOnlyCoordinatesPolygon=function(t){t=t.replace("Polygon ((",""),t=t.replace("))","");var n=t.split(","),o=new Array;return n.forEach(function(t,n){t=t.trim();var a=t.split(" "),r=a[1],i=a[0],s=p.convertLatLongProj(r,i,e),l=[s.lat,s.lng];o.push(l)}),o},e.getOnlyCoordinatesMultiPolygon=function(e){var t=new Array;e=e.replace("MultiPolygon (((",""),e=e.replace(")))","");var n=e.split(")),((");return n.forEach(function(e,n){e=e.replace("((",""),e=e.replace("))","");var o=e.split(","),a=new Array;o.forEach(function(e,t){e=e.trim();var n=e.split(" "),o=parseFloat(n[1]),r=parseFloat(n[0]);if(!isNaN(o)&&!isNaN(r)){var i=[o,r];a.push(i)}}),t.push(a)}),t},e.getTypeOfMapObject=function(e){return e?e.startsWith("MultiPolygon")?"MultiPolygon":e.startsWith("Polygon")?"Polygon":void 0:"Unknown"},e.timeConverter=function(e){var t=new Date(1e3*e),n=t.getFullYear(),o=t.getMonth();o<10&&(o="0"+o);var a=t.getDate();a<10&&(a="0"+a);var r=t.getHours();r<10&&(r="0"+r);var i=t.getMinutes();i<10&&(i="0"+i);var s=(t.getSeconds(),a+"/"+o+"/"+n+" "+r+":"+i);return s},e.model=[],e.externalModel=[],e.selectedItems=[],e.preselectedSearchItems=[],e.clickedValueModel="",e.removedValueModel="",e.itemsRemoved=function(t){e.removedValueModel=t},e.user_options=function(){},e.show_anonymous_menu=function(){},e.show_user_menu=function(){},e.create_field_array=function(e,t,n){var o=new Array;return o.name=e,o.type=t,o.value=n,o},e.create_field_array_with_twoFields=function(e,t,n,o){var a=new Array;return a.name=e,a.type=t,a.value=n,a.secondValue=o,a},e.fix_fb_image_link=function(e){if(e.indexOf("http://graph.facebook.com")>=0){var t=e.split("http://graph.facebook.com"),n="http://graph.facebook.com"+t[1];return n}return e},e.log_in=function(t,n){if(O.takeIfAvailable("submit-form"))if(A.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";var o=new Array;o.push(e.create_field_array("Usuario","notNull",t)),o.push(e.create_field_array("ContraseÃ±a","notNull",n)),h.check_fields(o,"error_container")?d.log_in(t,n).then(function(t){h.http_response_is_successful(t,"error_container")?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),m.save_user_data(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),_.saveUser(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),document.getElementById("spinner-inside-modal").style.display="none",O.makeAvailableAgain("submit-form"),e.close_login_modal()):(O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){document.getElementById("spinner-inside-modal").style.display="none",O.makeAvailableAgain("submit-form"),h.show_error_message("error_container",e.statusText)}):(document.getElementById("spinner-inside-modal").style.display="none",O.makeAvailableAgain("submit-form"))}else O.makeAvailableAgain("submit-form"),w.show_alert("Sin conexiÃ³n a internet","Para iniciar sesiÃ³n debe estar conectado a internet")},e.log_in_background=function(t,n){d.log_in(t,n).then(function(t){return h.http_response_is_successful_ajax(t)?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),m.save_user_data(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),_.saveUser(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),1):0},function(e){return 0})},e.sign_out=function(){m.erase_user_data(),_.eraseUser(),document.getElementById("spinner").style.display="none",e.set_user_picture(0)},e.show_edit_profile_modal=function(){O.takeIfAvailable("open-modal")&&(document.getElementById("spinner").style.display="block",e.newuser=new Array,e.newuser.email=m.email,e.newuser.gender=m.gender,e.newuser.username=m.name,e.newuser.interested=m.interested,e.newuser.status=m.status,e.newuser.show_location=m.show_location,e.actual_photo=m.picture_url,null!=e.actual_photo||(e.actual_photo="./img/icon-user-anonymous.png"),"url(./img/icon-user-anonymous.png)"==e.actual_photo&&(e.actual_photo="./img/icon-user-anonymous.png"),P.checkNoModalIsOpen(),D.isMobileDevice()?r.fromTemplateUrl("templates/edit_profile_with_photo.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",P.activeModal=e,P.activeModal.show(),O.makeAvailableAgain("open-modal")}):r.fromTemplateUrl("templates/edit_profile_with_photo_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",P.activeModal=e,P.activeModal.show(),O.makeAvailableAgain("open-modal")}))},e.readURL=function(t,n){if(t.files&&t.files[0]){1==n?e.newuser.picture_url=t.files[0]:2==n?e.comment.photo=t.files[0]:e.report.file=t.files[0];var o=new FileReader;o.onload=function(e){document.getElementById("myImage").src=e.target.result},o.readAsDataURL(t.files[0])}},e.close_edit_profile_modal=function(){P.checkNoModalIsOpen()},e.edit_profile_ok=function(){e.edit_profile()},e.getObjectDataFromResponse=function(e){return e.data?e.data:e},e.edit_profile=function(){if(O.takeIfAvailable("submit-form"))if(A.isOnline()){document.getElementById("spinner-inside-modal").style.display="block",e.newuser.password=m.password;var t=d.edit_user(e.newuser);null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&D.isMobileDevice()?t.then(function(t){var n=JSON.parse(t.response);h.http_data_response_is_successful(n,"error_container")?(n=e.getObjectDataFromResponse(n),m.save_user_data(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),_.saveUser(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){var t="CÃ³digo: "+e.code;t=t+" Origen: "+e.source,t=t+" Destino: "+e.target,t=t+" http_status: "+e.http_status,t=t+" Body: "+e.body,t=t+" Exception: "+e.exception,h.show_error_message("error_container","Hubo un error en el envÃ­o: "+t),O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(t){g(function(){e.uploadProgress=t.loaded/t.total*100,document.getElementById("sent_label").innerHTML="Enviado: "+Math.round(e.uploadProgress)+"%"})}):t.success(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",h.http_response_is_successful(t,"error_container")?(m.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),_.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),
document.getElementById("spinner-inside-modal").style.display="none",O.makeAvailableAgain("submit-form"),e.close_edit_profile_modal(),e.check_user_logged()):(O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")}).error(function(e,t,n,o){h.show_error_message("error_container",t),document.getElementById("spinner-inside-modal").style.display="none",O.makeAvailableAgain("submit-form")})}else O.makeAvailableAgain("submit-form"),w.show_alert("Sin conexiÃ³n a internet","Para editar su perfil debe estar conectado a internet")},e.show_login_modal=function(){O.takeIfAvailable("open-modal")&&(e.nonauth=new Array,e.nonauth.user="",e.nonauth.password="",P.checkNoModalIsOpen(),r.fromTemplateUrl("templates/log_in.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),P.activeModal=t,O.makeAvailableAgain("open-modal"),P.activeModal.show()}))},e.login_ok=function(){e.log_in(e.nonauth.user,e.nonauth.password)},e.close_login_modal=function(){P.checkNoModalIsOpen()},e.show_sign_up_modal=function(){O.takeIfAvailable("open-modal")&&(e.newuser=new Array,e.newuser.email="",e.newuser.password="",e.newuser.fullname="",e.newuser.id_doc="",e.newuser.telephone="",e.newuser.photo="",P.checkNoModalIsOpen(),D.isMobileDevice()?r.fromTemplateUrl("templates/sign_up.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),P.activeModal=t,O.makeAvailableAgain("open-modal"),P.activeModal.show()}):r.fromTemplateUrl("templates/sign_up_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),P.activeModal=t,O.makeAvailableAgain("open-modal"),P.activeModal.show()}))},e.close_sign_up_modal=function(){P.checkNoModalIsOpen()},e.sign_up=function(){if(O.takeIfAvailable("submit-form"))if(A.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";new Array;null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&D.isMobileDevice()?d.create_user(e.newuser).then(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",h.http_data_response_is_successful(t,"error_container")?(t=e.getObjectDataFromResponse(t),m.save_user_data(t.name,t.email,e.newuser.password,t.identity_document,t.phone,t.picture_url),m.save_user_data(t.Name,e.newuser.password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),_.saveUser(t.Name,password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"}):d.create_user(e.newuser).then(function(t){if(h.http_response_is_successful(t,"error_container")){m.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),_.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_sign_up_modal();var n=i.alert({title:"Usuario creado con Ã©xito",template:e.getObjectDataFromResponse(t).message});n.then(function(e){}),e.check_user_logged()}else O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(e){O.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",h.show_error_message("error_container",e.statusText)})}else O.makeAvailableAgain("submit-form"),w.show_alert("Sin conexiÃ³n a internet","Para iniciar registrarse debe estar conectado a internet")},e.sign_up_ok=function(){e.sign_up()},e.check_user_logged=function(){var t=m.name;if(null==t){var n=_.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?e.log_in_background(t.name,t.password):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==m.picture_url||""==m.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_offline_user=function(){var t=m.name;if(null==t){var n=_.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?m.save_user_data(t.name,t.password,t.picture_url,t.show_location):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==m.picture_url||""==m.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_user_picture=function(t){document.getElementById("user_picture");0==t?e.user_cached_image="./img/icon-user-anonymous.png":null!=m.picture_url&&""!=m.picture_url?e.user_cached_image=m.picture_url:e.user_cached_image="./img/icon-user-anonymous.png"},e.find_me=function(){e.set_active_option("button-find-me"),e.hide_special_divs();var t={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(t).then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,c.save_new_report_position(t.coords.latitude,t.coords.longitude),A.isOnline()?e.map.center.zoom=18:e.map.center.zoom=16,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"<p align='center'>Te encuentras aquÃ­ <br/> <a ng-click='new_report(1);'>Iniciar reporte en tu posiciÃ³n actual</a></p>",focus:!0,draggable:!1,getMessageScope:function(){return e}}},function(t){e.openCouncilSelector()})},e.submitFilters=function(){document.getElementById("spinner").style.display="block",u.getData(e.filters).then(function(t){u.asentamientosActivos=t,document.getElementById("spinner").style.display="block",e.updatePins()})},e.toggleGroup=function(t){e.isGroupShown(t)?e.shownGroup=null:e.shownGroup=t},e.isGroupShown=function(t){return e.shownGroup===t},e.mapIcon=function(){return{iconUrl:"",iconSize:[37,41],iconAnchor:[18,36],popupAnchor:[0,0]}},e.updatePins=function(){s.getMap().then(function(t){e.asentamientos_layers.length>0&&e.asentamientos_layers.forEach(function(n,o){t.removeLayer(n),delete e.asentamientos_layers[o]}),u.asentamientosActivos.forEach(function(n){var o={};"Polygon"==e.getTypeOfMapObject(n.wkt_geom)?o=e.getOnlyCoordinatesPolygon(n.wkt_geom):"MultiPolygon"==e.getTypeOfMapObject(n.wkt_geom)&&(o=e.getOnlyCoordinatesMultiPolygon(n.wkt_geom),1==o.length&&(o=o[0]));var a="#1cc7bd",r="img/pin-green.svg",i='<div class="popup-header"><div class="popup-ast-nombre">'+n.nombre+'</div><div class="popup-ast-nombre-otro">'+n.nombre_otro+'</div></div><ul class="popup-body"><li><label>AÃ±o de creaciÃ³n</label><div class="popup-value">'+n.y_creacion+'<div class="popup-value"></li><!--<li><label>Vulnerabilidad</label><div class="popup-value" style="color:'+a+'">'+n.vulnera_urb+'<div class="popup-value"></li><li><label>NÃºmero estimado de personas</label><div class="popup-value">'+n.estim_personas_ajust+'<div class="popup-value"></li>--><li><label>NÃºmero estimado de viviendas</label><div class="popup-value">'+n.nro_viviendas+'<div class="popup-value"></li></ul><div class="popup-footer"><a href="#">Click para ver mÃ¡s detalles</a></div>',s=L.polygon(o,{color:a}).bindPopup(i).addTo(t);e.asentamientos_layers.push(s);var l=e.mapIcon();if(l.iconUrl=r,n.cent_lat&&n.cent_long){var c=L.marker([n.cent_lat,n.cent_long],{icon:L.icon(l)}).bindPopup(i).addTo(t);e.asentamientos_layers.push(c)}}),document.getElementById("filter-total").innerHTML=u.asentamientosActivos.length,document.getElementById("spinner").style.display="none"})}}]),pmb_im.controllers.controller("StaticController",["$scope",function(e){}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
