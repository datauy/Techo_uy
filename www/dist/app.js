window.VERSION = "0.0.2";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://tomamosuna.info"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!1),ionic.Platform.isFullScreen=!0,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.map",{cache:!1,url:"/map",views:{menuContent:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}),t.otherwise("/app/intro")}]),pmb_im.controllers.controller("AbsController",["$scope",function(e){}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService",function(e,t,n,o,a,i,r,s){var l=s.initDB();l.info().then(console.log.bind(console)),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){r.save_initial_position(e),t.go("app.map")},function(e){t.go("app.map")})},e.$on("$ionicView.enter",function(){null!=r.council_modal&&(r.council_modal.hide(),r.council_modal.remove()),e.geolocate()})}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaCamera","$cordovaGeolocation","$compile","$ionicModal","$ionicPopup","leafletData","ConfigService","LocationsService","PinService","MessageService","DrinkService","AuthService","UserService","DBService","$timeout","$interval","$location","ErrorService","$ionicSlideBoxDelegate","$ionicScrollDelegate","PopUpService","ConnectivityService","$cordovaInAppBrowser","MapService","ModalService","SemaphoreService","ValidationService","NotificationService",function(e,t,n,o,a,i,r,s,l,c,u,d,p,m,_,g,f,v,h,y,b,w,k,I,A,E,D,R,O,M){e.online_user_geo={},e.online_user_geo_array=new Array,e.baseURL=l.baseURL,e.AppName=l.AppName,e.user_cached_image="./img/icon-user-anonymous.png",e.one_value_popup=null,e.myIntervals=new Array,e.$on("$ionicView.beforeEnter",function(){D.checkNoModalIsOpen(),g.initDB(),I.isOnline()?e.check_user_logged():e.set_offline_user(),document.getElementById("foot_bar").style.display="block",I.isOnline()&&(e.create_online_map(),e.myIntervals.userLocation=v(function(){e.sendUserLocation()},3e4))}),e.$on("$ionicView.afterEnter",function(){s.getMap();""!=c.initial_lat?E.centerMapOnCoords(c.initial_lat,c.initial_lng,16):E.centerMapOnCoords(-34.901113,-56.164531,14),e.checkNotifications()}),e.checkNotifications=function(){e.myIntervals.notifications&&v.cancel(e.myIntervals.notifications),e.myIntervals.notifications=v(function(){_.uid&&M.getUnrecivedNotifications(_.name,_.password).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||(e.notifications=e.getObjectDataFromResponse(n).Notifications)})},3e3)},e.openNotification=function(t){var n=new Array;e.notifications.forEach(function(o,a){o.nid==t?"nuevo_mensaje"==o.tipo?e.send_message_to(o.uid):"invitacion_a_trago"==o.tipo?e.openInvitationsModal(o.uid):"respuesta_a_invitacion"==o.tipo&&e.openInvitationsModal(o.uid):n.push(o)}),e.notifications=n},e.closeNotification=function(t){var n=new Array;e.notifications.forEach(function(e,o){e.nid==t||n.push(e)}),e.notifications=n},e.openWebsite=function(e){var t={location:"no",clearcache:"yes",toolbar:"no"};A.open(e,"_blank",t).then(function(e){})["catch"](function(e){})},e.create_online_map=function(){e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:12,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{}},e.loadPinsLayer(),e.map.center={lat:-34.901113,lng:-56.164531,zoom:16},s.getMap().then(function(t){t.on("moveend",e.hideOffScreenPins)})},e.next=function(){b.next()},e.previous=function(){b.previous()},e.back_to_map=function(e){e?(D.checkNoModalIsOpen(),document.getElementById("foot_bar").style.display="block",document.getElementById("spinner-inside-modal").style.display="none"):document.getElementById("spinner-inside-modal").style.display="none"},e.image=null,e.addImage=function(t,o,a,i){e.isUserPhoto=o,e.isCommentPhoto=a,e.isNewUserPhoto=i;var r=Camera.PictureSourceType.CAMERA,s=!0,l=!0;1==t&&(r=Camera.PictureSourceType.PHOTOLIBRARY,s=!1,l=!1);var c={quality:90,destinationType:Camera.DestinationType.FILE_URI,sourceType:r,allowEdit:!1,correctOrientation:s,encodingType:Camera.EncodingType.JPEG,popoverOptions:CameraPopoverOptions,saveToPhotoAlbum:l,targetWidth:500,targetHeight:500};n.getPicture(c).then(function(t){function n(t){window.FilePath.resolveNativePath(t,function(n){t="file://"+n,n.startsWith("file://")&&(t=n),1==e.isUserPhoto?e.profile.picture_url=t:1==e.isCommentPhoto?e.comment.file=t:1==e.isNewUserPhoto&&(e.newuser.picture_url=t),e.imgURI=t},function(e){alert("Error resolveNativePath"+e)})}n(t)},function(e){})},e.urlForImage=function(){var t="http://placehold.it/200x200";if(e.image){var n=e.image.substr(e.image.lastIndexOf("/")+1);t=cordova.file.dataDirectory+n}return t},e.scrollMe=function(e){h.hash(e);var t=w.$getByHandle("content");t.anchorScroll()},e.set_active_option=function(e){document.getElementById(e).className="option-active"},e.hide_special_divs=function(){document.getElementById("user-options-menu").style.display="none"},e.close_report_detail_modal=function(){D.checkNoModalIsOpen(),e.report_detail_id=null},e.locate=function(){o.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"You Are Here",focus:!0,draggable:!1}},function(e){})},e.addMapControls=function(){document.getElementById("map_crosshair").style.display="block",document.getElementById("map_crosshair_button").style.display="block"},e.changeUserLocationPin=function(t,n,o){if(e.online_user_geo_array[o]){layer=e.online_user_geo_array[o];var a=new L.LatLng(t,n);layer.setLatLng(a)}},e.hideOffScreenPins=function(){s.getMap().then(function(t){var n=t.getBounds();e.usersVisible=[],e.online_user_geo_array.forEach(function(o,a){var i=n.contains(o.getLatLng());i?i&&(t.addLayer(o),e.usersVisible.push(o.feature)):t.removeLayer(o)})})},e.removeAllPins=function(){s.getMap().then(function(t){e.usersVisible=[],e.online_user_geo_array&&e.online_user_geo_array.forEach(function(e,n){t.removeLayer(e)})})},e.loadPinsLayer=function(){document.getElementById("spinner").style.display="block",s.getMap().then(function(t){u.getAll().then(function(n){if(null==u.lastPinsResponse||u.lastPinsResponse&&u.lastPinsResponse!=n){e.online_user_geo_array&&(e.usersVisible=[],e.online_user_geo_array.forEach(function(e,n){t.removeLayer(e)})),u.lastPinsResponse=n,e.reportsByState={};var o=n.data.features;e.online_users_geo=n.data.features,o.forEach(function(t){if(t.properties){var n=t.geometry.coordinates[0],o=t.geometry.coordinates[1];if(n&&o){var i=t.properties.Online_status,r=t.properties.Icon;"anon"==r&&(r="./img/icon-user-anonymous.png");var s="./img/generic_pin_red.png";"Online"==i&&(s="./img/generic_pin_green.png");var l=L.icon({shadowUrl:s,shadowSize:[100,138],shadowAnchor:[44,138],iconUrl:r,iconSize:[46,46],iconAnchor:[24,120],popupAnchor:[0,-138]}),c=L.marker([o,n],{icon:l});if(c.feature=t,e.online_user_geo_array[c.feature.properties.Uid]=c,t.properties){var u=t.properties.Uid,d=t.properties.Name,p=t.properties.InterestedIn,m=t.properties.Status,g=t.properties.Gender;_.uid&&_.uid==u&&(d="TÃº: "+d);var f=e.timeConverter(t.properties.LocationTimeStamp);html='<a class="name_inside_marker_popup"><p>'+d+"</p>",html=html+'<p class="gender_inside_marker_popup">'+g+"</p>",html=html+'<p><img class="img_inside_marker_popup" src="'+r+'"/></p>',html=html+'<p class="status_inside_marker_popup">"'+m+'"</p>',html=html+'<p class="interested_inside_marker_popup">Interesad@ en '+p+"</p>",html=html+'<p class="lastupdate_inside_marker_popup">'+i+"</p>",html=html+'<p class="lastupdate_inside_marker_popup">'+f+"</p>",_.uid&&_.uid==u||(html=html+'<p class="message_icon_inside_marker_popup"><img ng-click="send_message_to('+u+');" src="./img/message_icon.png" />',html=html+'<img ng-click="openInvitationsModal('+u+');" src="./img/drink_icon.png" /></p>'),html+="</a>";var v=a(html)(e);c.bindPopup(v[0])}}}}),document.getElementById("spinner").style.display="none",e.hideOffScreenPins()}e.checkTalkStatus()})})},e.checkTalkStatus=function(){R.takeIfAvailable("can_talk")&&d.checkWhoCanTalk(_.name,_.password).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||(n.forEach(function(e){d.canTalkToUsers["uid-"+e]=1}),R.makeAvailableAgain("can_talk"))})},e.key_press=function(e,t){var n=e.keyCode;if("private_chat"==t&&13==n)try{null===cordova||cordova&&cordova.plugins.Keyboard&&cordova.plugins.Keyboard.close()}catch(o){}},e.send_message_to=function(t){if(R.takeIfAvailable("open-modal"))if(document.getElementById("spinner").style.display="block",_.uid)d.checkWhoCanTalk(_.name,_.password).then(function(n){var o=e.getObjectDataFromResponse(n);if(!o.Status||"error"!=o.Status)if(o.forEach(function(e){d.canTalkToUsers["uid-"+e]=1}),e.canTalkToUser(t))e.chat=new Array,e.chat.other_user=new Array,e.chat.other_user.uid=t,e.chat.messages=new Array,e.chat.new_text_message="",d.getUserInfo(t).then(function(n){e.getObjectDataFromResponse(n).Photo?e.chat.other_user.picture_url=e.getObjectDataFromResponse(n).Photo:e.chat.other_user.picture_url="./img/icon-user-anonymous.png",e.chat.other_user.username=e.getObjectDataFromResponse(n).Name;var o=_.uid;d.getAllMessagesToUser(_.name,_.password,t,o).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||(e.chat.messages=e.getObjectDataFromResponse(t)),e.myIntervals.privateMessage&&v.cancel(e.myIntervals.privateMessage),e.myIntervals.privateMessage=v(function(){d.getAllMessagesToUser(_.name,_.password,e.chat.other_user.uid,_.uid).then(function(t){var n=e.getObjectDataFromResponse(t);if(!n.Status||"error"!=n.Status){e.chat.messages=e.getObjectDataFromResponse(n);var o=e.chat.messages[e.chat.messages.length-1].nid;e.scrollMe("message-"+o)}})},3e3),i.fromTemplateUrl("templates/private_chat.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",D.checkNoModalIsOpen(),D.activeModal=t,document.getElementById("foot_bar").style.display="none",D.activeModal.show(),R.makeAvailableAgain("open-modal");var n=e.chat.messages[e.chat.messages.length-1].nid;e.scrollMe("message-"+n)})})});else{R.makeAvailableAgain("open-modal"),document.getElementById("spinner").style.display="none";var a=r.alert({title:"Invita algo de tomar",template:"Debe tener al menos una invitaciÃ³n a un trago aceptada entre usted y esta persona para poder hablar."});a.then(function(e){})}});else{document.getElementById("spinner").style.display="none",R.makeAvailableAgain("open-modal");var n=r.alert({title:"Inicie sesiÃ³n o cree una nueva cuenta",template:"Debe estar logueado para poder enviar y recibir mensajes."});n.then(function(e){})}},e.checkIfCanReplyInvitation=function(e){return!(!_.uid||_.uid==e.uid||"Enviada"!=e.status&&"Recibida"!=e.status)},e.checkIfWaitingReplyFromInvitation=function(e){return!(!_.uid||_.uid!=e.uid||"Enviada"!=e.status&&"Recibida"!=e.status)},e.getDrinkCostByNid=function(t){var n=0;return e.invitation.available_drinks&&e.invitation.available_drinks.forEach(function(e){e.Nid==t&&(n=e.Credits)}),n},e.acceptInvitation=function(t){e.send_invitation_response("Aceptada",t),e.invitation.other_user.talk=!0},e.refuseInvitation=function(t){e.send_invitation_response("Rechazada",t)},e.canTalkToUser=function(e){if(_.uid)return null!=d.canTalkToUsers["uid-"+e]&&1==d.canTalkToUsers["uid-"+e]},e.send_invitation_response=function(t,n){var o=document.getElementById("error_container");if(o.style.display="none",null==n)o.style.display="block",o.innerHTML="Hubo un error. No se encuentra el ID de invitaciÃ³n";else{e.getDrinkCostByNid(e.invitation.selected_drink),e.invitation.user_credits;R.takeIfAvailable("submit-form")&&(document.getElementById("spinner-inside-modal").style.display="block",p.sendDrinkInvitationResponse(t,_.name,_.password,n,_.uid).then(function(t){R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none";var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status&&(o.style.display="block",o.innerHTML=n.Message)}))}},e.send_invitation=function(){var t=document.getElementById("error_container");if(null==e.invitation.selected_drink)t.style.display="block",t.innerHTML="Debe seleccionar una bebida a invitar";else{var n=e.getDrinkCostByNid(e.invitation.selected_drink),o=e.invitation.user_credits;parseFloat(n)>parseFloat(o)?(t.style.display="block",t.innerHTML="CrÃ©ditos insuficientes. Para poder invitar esta bebida debe comprar mÃ¡s crÃ©ditos"):R.takeIfAvailable("submit-form")&&(document.getElementById("spinner-inside-modal").style.display="block",p.sendDrinkInvitationToUser(e.invitation.selected_drink,e.invitation.other_user.uid,_.uid,_.name,_.password).then(function(n){R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none";var o=e.getObjectDataFromResponse(n);o.Status&&"error"==o.Status?(t.style.display="block",t.innerHTML=o.Message):(e.invitation.user_credits=o.NewCredits,e.invitation.selected_drink=null,d.canTalkToUsers["uid-"+e.invitation.other_user.uid]=null)}))}},e.openInvitationsModal=function(t){if(R.takeIfAvailable("open-modal"))if(document.getElementById("spinner").style.display="block",_.uid)e.invitation=new Array,e.invitation.response=null,e.invitation.other_user=new Array,e.invitation.other_user.uid=t,e.invitation.invitations=new Array,e.invitation.available_drinks=new Array,e.invitation.selected_drink=null,d.getUserInfo(t).then(function(t){e.getObjectDataFromResponse(t).Photo?e.invitation.other_user.picture_url=e.getObjectDataFromResponse(t).Photo:e.invitation.other_user.picture_url="./img/icon-user-anonymous.png",e.invitation.other_user.username=e.getObjectDataFromResponse(t).Name,p.getAllDrinksAvailable(_.name,_.password).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||(e.invitation.available_drinks=n.Drinks,e.invitation.user_credits=n.UserCredits),p.getAllInvitationsWithUser(_.name,_.password,e.invitation.other_user.uid,_.uid).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||(e.invitation.invitations=n),d.checkWhoCanTalk(_.name,_.password).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||n.forEach(function(e){d.canTalkToUsers["uid-"+e]=1})}),e.myIntervals.drinkInvitation&&v.cancel(e.myIntervals.drinkInvitation),e.myIntervals.drinkInvitation=v(function(){p.getAllInvitationsWithUser(_.name,_.password,e.invitation.other_user.uid,_.uid).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||(e.invitation.invitations=e.getObjectDataFromResponse(n)),d.checkWhoCanTalk(_.name,_.password).then(function(t){var n=e.getObjectDataFromResponse(t);n.Status&&"error"==n.Status||n.forEach(function(e){d.canTalkToUsers["uid-"+e]=1})})})},3e3),i.fromTemplateUrl("templates/drink_invitation.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",D.checkNoModalIsOpen(),D.activeModal=e,document.getElementById("foot_bar").style.display="none",D.activeModal.show(),R.makeAvailableAgain("open-modal")})})})});else{document.getElementById("spinner").style.display="none",R.makeAvailableAgain("open-modal");var n=r.alert({title:"Inicie sesiÃ³n o cree una nueva cuenta",template:"Debe estar logueado para poder enviar y recibir invitaciones."});n.then(function(e){})}},e.close_message_modal=function(){e.myIntervals.privateMessage&&v.cancel(e.myIntervals.privateMessage),e.myIntervals.drinkInvitation&&v.cancel(e.myIntervals.drinkInvitation),document.getElementById("foot_bar").style.display="block",D.checkNoModalIsOpen()},e.close_invitation_modal=function(){e.myIntervals.privateMessage&&v.cancel(e.myIntervals.privateMessage),e.myIntervals.drinkInvitation&&v.cancel(e.myIntervals.drinkInvitation),document.getElementById("foot_bar").style.display="block",D.checkNoModalIsOpen()},e.send_message_ok=function(){R.takeIfAvailable("submit-form")&&(e.chat.new_text_message?d.sendTextMessageToUser(e.chat.new_text_message,e.chat.other_user.uid,_.uid,_.name,_.password).then(function(t){R.makeAvailableAgain("submit-form"),document.getElementById("message_text_area").innerHTML="",e.chat.new_text_message="",d.getAllMessagesToUser(_.name,_.password,e.chat.other_user.uid,_.uid).then(function(t){e.chat.messages=e.getObjectDataFromResponse(t)})}):R.makeAvailableAgain("submit-form"))},e.getNameFromUid=function(t){return _.uid==t?_.name:e.chat.other_user.uid==t?e.chat.other_user.username:void 0},e.getNameFromUidInvitation=function(t){return _.uid==t?_.name:e.invitation.other_user.uid==t?e.invitation.other_user.username:void 0},e.timeConverter=function(e){var t=new Date(1e3*e),n=t.getFullYear(),o=t.getMonth();o<10&&(o="0"+o);var a=t.getDate();a<10&&(a="0"+a);var i=t.getHours();i<10&&(i="0"+i);var r=t.getMinutes();r<10&&(r="0"+r);var s=(t.getSeconds(),a+"/"+o+"/"+n+" "+i+":"+r);return s},e.model=[],e.externalModel=[],e.selectedItems=[],e.preselectedSearchItems=[],e.clickedValueModel="",e.removedValueModel="",e.itemsRemoved=function(t){e.removedValueModel=t},e.user_options=function(){var t=document.getElementById("user-options-menu");if("block"==t.style.display)t.style.display="none";else{var n=_.name;null==n?e.show_anonymous_menu():e.show_user_menu()}},e.show_anonymous_menu=function(){var t=document.getElementById("user-options-menu"),n="<div id='auth_options'><div class='nonauth-link' ng-click='show_login_modal()'>Iniciar sesiÃ³n</div>";n+="<div class='nonauth-link' ng-click='show_sign_up_modal()'>Registrarse</div></div>",t.innerHTML=n,a(t)(e),t.style.height="120px",t.style.width="150px",t.style.display="block"},e.show_user_menu=function(){var t=document.getElementById("user-options-menu"),n=_.name+"<div id='auth_options'><div class='user-logged-link' ng-click='show_edit_profile_modal()'>Mi perfil</div>";n+="<div class='user-logged-link' ng-click='sign_out()'>Cerrar sesiÃ³n</div></div>",t.innerHTML=n,a(t)(e),t.style.height="220px",t.style.width="200px",t.style.display="block"},e.create_field_array=function(e,t,n){var o=new Array;return o.name=e,o.type=t,o.value=n,o},e.create_field_array_with_twoFields=function(e,t,n,o){var a=new Array;return a.name=e,a.type=t,a.value=n,a.secondValue=o,a},e.fix_fb_image_link=function(e){if(e.indexOf("http://graph.facebook.com")>=0){var t=e.split("http://graph.facebook.com"),n="http://graph.facebook.com"+t[1];return n}return e},e.log_in=function(t,n){if(R.takeIfAvailable("submit-form"))if(I.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";var o=new Array;o.push(e.create_field_array("Usuario","notNull",t)),o.push(e.create_field_array("ContraseÃ±a","notNull",n)),y.check_fields(o,"error_container")?m.log_in(t,n).then(function(t){y.http_response_is_successful(t,"error_container")?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),_.save_user_data(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),g.saveUser(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),document.getElementById("spinner-inside-modal").style.display="none",R.makeAvailableAgain("submit-form"),e.close_login_modal(),e.sendUserLocation()):(R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){document.getElementById("spinner-inside-modal").style.display="none",R.makeAvailableAgain("submit-form"),y.show_error_message("error_container",e.statusText)}):(document.getElementById("spinner-inside-modal").style.display="none",R.makeAvailableAgain("submit-form"))}else R.makeAvailableAgain("submit-form"),k.show_alert("Sin conexiÃ³n a internet","Para iniciar sesiÃ³n debe estar conectado a internet")},e.log_in_background=function(t,n){m.log_in(t,n).then(function(t){return y.http_response_is_successful_ajax(t)?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),_.save_user_data(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),g.saveUser(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),e.sendUserLocation(),1):0},function(e){return 0})},e.sendUserLocation=function(){if(R.takeIfAvailable("submit-location"))if(1==_.show_location){var t={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(t).then(function(t){u.sendUserLocation(t.coords.latitude,t.coords.longitude,_.name,_.password,_.uid).then(function(n){return y.http_response_is_successful_ajax(n)?(c.save_last_user_position(t.coords.latitude,t.coords.longitude),e.loadPinsLayer(),R.makeAvailableAgain("submit-location"),1):(R.makeAvailableAgain("submit-location"),0)})},function(t){return R.makeAvailableAgain("submit-location"),e.loadPinsLayer(),0})}else R.makeAvailableAgain("submit-location"),e.loadPinsLayer()},e.sign_out=function(){_.erase_user_data(),g.eraseUser(),document.getElementById("spinner").style.display="none",e.set_user_picture(0),document.getElementById("user-options-menu").style.display="none"},e.show_edit_profile_modal=function(){R.takeIfAvailable("open-modal")&&(document.getElementById("spinner").style.display="block",e.newuser=new Array,e.newuser.email=_.email,e.newuser.gender=_.gender,e.newuser.username=_.name,e.newuser.interested=_.interested,e.newuser.status=_.status,e.newuser.show_location=_.show_location,e.actual_photo=_.picture_url,null!=e.actual_photo||(e.actual_photo="./img/icon-user-anonymous.png"),"url(./img/icon-user-anonymous.png)"==e.actual_photo&&(e.actual_photo="./img/icon-user-anonymous.png"),D.checkNoModalIsOpen(),O.isMobileDevice()?i.fromTemplateUrl("templates/edit_profile_with_photo.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",D.activeModal=e,document.getElementById("foot_bar").style.display="none",D.activeModal.show(),R.makeAvailableAgain("open-modal")}):i.fromTemplateUrl("templates/edit_profile_with_photo_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",D.activeModal=e,document.getElementById("foot_bar").style.display="none",D.activeModal.show(),R.makeAvailableAgain("open-modal")}))},e.readURL=function(t,n){if(t.files&&t.files[0]){1==n?e.newuser.picture_url=t.files[0]:2==n?e.comment.photo=t.files[0]:e.report.file=t.files[0];var o=new FileReader;o.onload=function(e){document.getElementById("myImage").src=e.target.result},o.readAsDataURL(t.files[0])}},e.close_edit_profile_modal=function(){document.getElementById("foot_bar").style.display="block",D.checkNoModalIsOpen()},e.edit_profile_ok=function(){e.edit_profile()},e.getObjectDataFromResponse=function(e){return e.data?e.data:e},e.edit_profile=function(){if(R.takeIfAvailable("submit-form"))if(I.isOnline()){document.getElementById("spinner-inside-modal").style.display="block",e.newuser.password=_.password;var t=m.edit_user(e.newuser);null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&O.isMobileDevice()?t.then(function(t){var n=JSON.parse(t.response);y.http_data_response_is_successful(n,"error_container")?(n=e.getObjectDataFromResponse(n),_.save_user_data(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),g.saveUser(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){var t="CÃ³digo: "+e.code;t=t+" Origen: "+e.source,t=t+" Destino: "+e.target,t=t+" http_status: "+e.http_status,t=t+" Body: "+e.body,t=t+" Exception: "+e.exception,y.show_error_message("error_container","Hubo un error en el envÃ­o: "+t),R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(t){f(function(){e.uploadProgress=t.loaded/t.total*100,document.getElementById("sent_label").innerHTML="Enviado: "+Math.round(e.uploadProgress)+"%"})}):t.success(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",y.http_response_is_successful(t,"error_container")?(_.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),g.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),document.getElementById("spinner-inside-modal").style.display="none",R.makeAvailableAgain("submit-form"),e.close_edit_profile_modal(),e.check_user_logged()):(R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")}).error(function(e,t,n,o){y.show_error_message("error_container",t),document.getElementById("spinner-inside-modal").style.display="none",R.makeAvailableAgain("submit-form")})}else R.makeAvailableAgain("submit-form"),k.show_alert("Sin conexiÃ³n a internet","Para editar su perfil debe estar conectado a internet")},e.show_login_modal=function(){R.takeIfAvailable("open-modal")&&(e.nonauth=new Array,e.nonauth.user="",e.nonauth.password="",D.checkNoModalIsOpen(),i.fromTemplateUrl("templates/log_in.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),D.activeModal=t,R.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",D.activeModal.show()}))},e.login_ok=function(){e.log_in(e.nonauth.user,e.nonauth.password)},e.close_login_modal=function(){document.getElementById("foot_bar").style.display="block",D.checkNoModalIsOpen()},e.show_sign_up_modal=function(){R.takeIfAvailable("open-modal")&&(e.newuser=new Array,e.newuser.email="",e.newuser.password="",e.newuser.fullname="",e.newuser.id_doc="",e.newuser.telephone="",e.newuser.photo="",D.checkNoModalIsOpen(),O.isMobileDevice()?i.fromTemplateUrl("templates/sign_up.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),D.activeModal=t,R.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",D.activeModal.show()}):i.fromTemplateUrl("templates/sign_up_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),D.activeModal=t,R.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",D.activeModal.show()}))},e.close_sign_up_modal=function(){document.getElementById("foot_bar").style.display="block",D.checkNoModalIsOpen()},e.sign_up=function(){if(R.takeIfAvailable("submit-form"))if(I.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";new Array;null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&O.isMobileDevice()?m.create_user(e.newuser).success(function(t,n,o,a){document.getElementById("sent_label").innerHTML="Enviado: 100%",y.http_data_response_is_successful(t,"error_container")?(t=e.getObjectDataFromResponse(t),_.save_user_data(t.name,t.email,e.newuser.password,t.identity_document,t.phone,t.picture_url),_.save_user_data(t.Name,e.newuser.password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),g.saveUser(t.Name,password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")}).error(function(e,t,n,o){y.show_error_message("error_container",t),R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"}):m.create_user(e.newuser).then(function(t){if(y.http_response_is_successful(t,"error_container")){_.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),g.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_sign_up_modal();var n=r.alert({title:"Usuario creado con Ã©xito",template:e.getObjectDataFromResponse(t).message});n.then(function(e){}),e.check_user_logged()}else R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(e){R.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",y.show_error_message("error_container",e.statusText)})}else R.makeAvailableAgain("submit-form"),k.show_alert("Sin conexiÃ³n a internet","Para iniciar registrarse debe estar conectado a internet")},e.sign_up_ok=function(){e.sign_up()},e.check_user_logged=function(){var t=_.name;if(null==t){var n=g.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?e.log_in_background(t.name,t.password):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==_.picture_url||""==_.picture_url?e.set_user_picture(0):e.set_user_picture(1);
},e.set_offline_user=function(){var t=_.name;if(null==t){var n=g.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?_.save_user_data(t.name,t.password,t.picture_url,t.show_location):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==_.picture_url||""==_.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_user_picture=function(t){document.getElementById("user_picture");0==t?e.user_cached_image="./img/icon-user-anonymous.png":null!=_.picture_url&&""!=_.picture_url?e.user_cached_image=_.picture_url:e.user_cached_image="./img/icon-user-anonymous.png"},e.find_me=function(){e.set_active_option("button-find-me"),e.hide_special_divs();var t={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(t).then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,c.save_new_report_position(t.coords.latitude,t.coords.longitude),I.isOnline()?e.map.center.zoom=18:e.map.center.zoom=16,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"<p align='center'>Te encuentras aquÃ­ <br/> <a ng-click='new_report(1);'>Iniciar reporte en tu posiciÃ³n actual</a></p>",focus:!0,draggable:!1,getMessageScope:function(){return e}}},function(t){e.openCouncilSelector()})}}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var a=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(a+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(a+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var i={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},r=!0;return t.upload(a+"create_user",n.picture_url,i,r)}if(n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(a+"create_user",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(a+"create_user",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(a+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,i){var r="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+i;return e.post(a+"change_password",r,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var i={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},r=!0;return t.upload(a+"edit_profile",n.picture_url,i,r)}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(a+"edit_profile",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(a+"edit_profile",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://tomamosuna.info",ionic.Platform.isWebView()?t.baseURL="http://tomamosuna.info":t.baseURL="/backend",t.AppName="Â¿Tomamos una?",t.baseCobrand="/cobrands/pormibarrio",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,a,i,r,s,l){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:a,uid:i,status:r,gender:s,interested:l};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function a(){return m=new PouchDB("tomamosuna_local_db")}function i(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function r(e){return m.put(e)}function s(){return m.get("categories-list")}function l(e){s().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_ï¿¿"})}function d(e){m.get(e).then(function(e){return m.remove(e)})}function p(e){return m.remove(e)}var m;return{initDB:a,saveUser:t,getUser:n,eraseUser:o,saveReport:i,getReport:c,getAllReports:u,updateReport:r,deleteReport:d,deleteGivenReport:p,getCategories:s,saveCategories:l}}]),pmb_im.services.factory("DrinkService",["$http","ConfigService",function(e,t){var n=t.baseURL+"/api/";return{getAllDrinksAvailable:function(t,o){var a="user="+t+"&password="+o+"&hash_id="+Math.random();return e.post(n+"get_possible_drinks",a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},getAllInvitationsWithUser:function(t,o,a,i){var r="user="+t+"&password="+o+"&hash_id="+Math.random();return r=r+"&uid="+a+"&author_uid="+i,e.post(n+"get_invitations_between_users",r,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sendDrinkInvitationToUser:function(t,o,a,i,r){var s="user="+i+"&password="+r+"&drink_nid="+t+"&destination_uid="+o+"&author_uid="+a+"&hash_id="+Math.random();return e.post(n+"send_drink_invitation",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sendDrinkInvitationResponse:function(t,o,a,i,r){var s="response="+t+"&user="+o+"&password="+a+"&invitation_nid="+i+"&destination_uid="+r+"&hash_id="+Math.random();return e.post(n+"invitation_response",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacÃ­o.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una direcciÃ³n de correo vÃ¡lida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cÃ©dula uruguaya vÃ¡lida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var a=document.getElementById(t);return a.innerHTML=o,a.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,a,i){var r={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,a]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(r,{pointToLayer:function(e,o){n=o;var a="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquÃ­</a></p>",r=t(a)(i);return L.marker(o).bindPopup(r[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("MessageService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=(n.baseURL+"/sites/tomamos_una/files/json/online_users_geo.json",n.baseURL+"/api/");return o.getAllMessagesToUser=function(t,n,o,i){var r="user="+t+"&password="+n+"&author_uid="+i+"&uid="+o+"&hash_id="+Math.random();return e.post(a+"get_all_messages_to_user",r,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o.getUserInfo=function(t){return e.get(a+"get_user_info",{cache:!1,params:{uid:t,hash_id:Math.random()}})},o.sendTextMessageToUser=function(t,n,o,i,r){var s="user="+i+"&password="+r+"&text="+t+"&destination_uid="+n+"&author_uid="+o;return e.post(a+"send_text_message",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o.checkWhoCanTalk=function(t,n){var o="user="+t+"&password="+n;return e.post(a+"check_user_talk",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o.canTalkToUsers=new Array,o.current={},o.build=function(e){return new o(e)},o}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove())},e}]),pmb_im.services.factory("NotificationService",["$http","ConfigService",function(e,t){var n=t.baseURL+"/api/";return{getUnrecivedNotifications:function(t,o){var a="user="+t+"&password="+o+"&hash_id="+Math.random();return e.post(n+"get_unrecived_notifications",a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=n.baseURL+"/sites/tomamos_una/files/json/users_geo.json",i=n.baseURL+"/api/";return o.getAll=function(){return e.get(a,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,a,r){var s="user="+o+"&password="+a+"&lat="+t+"&lon="+n+"&uid="+r;return e.post(i+"send_user_position",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,a,i,r){$scope=n;var s=e.show({template:i+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==r&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+i+'" no puede estar vacÃ­o.</h3>')),"email"==r&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+i+'" no es una direcciÃ³n de correo vÃ¡lida.</h3>')),"iddoc_uy"==r&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+i+'" no es una cÃ©dula uruguaya vÃ¡lida.</h3>')),"two_words"==r&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+i+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var a=document.getElementById("error_container_inside");a.innerHTML=n,a.style.display="block",e.preventDefault()}}]});return s}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,a,i){var r="ubicacionesRestProd",s={};return s.searchLocationByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+i.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},s.searchEsquinaByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+i.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},s.getLocationGeom=function(t){for(var o=n.url+"/"+r+s.getParamPathByTipo(t.tipo),a=0;a<t.pathParams.length;a++)o+="/"+t.pathParams[a];return e.get(baseURL).then(function(e){return e.data})},s.getLocationGeomPMB=function(t,n,o){var r=a.baseURL+"/ajax/geocode?term="+i.selected_council+","+t+","+n+","+o;return e.get(r)},s.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},s}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,a,i,r,s,l){t.uid=i,t.name=e,t.password=n,t.picture_url=o,t.show_location=a,t.status=r,t.gender=s,t.interested=l},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=n%10===0?0:10-n%10,t==a}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
